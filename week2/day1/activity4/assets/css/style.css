* {
  box-sizing: border-box;
}

body {
  font-family: Arial;
  margin: 0;
}

header {
  padding: 40px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What happens when we set the display property to flex? 
TODO: Write your answer here 
forces items into given space
answer:makes the container flexible*/ 
nav {
  display: flex;
  background-color: #d8a47f;
}

nav a {
  color: #13293d;
  padding: 14px 20px;
  text-decoration: none;
  text-align: center;
}

/* 
What is the flex-wrap property? 
TODO: Write your answer here 
forces items into other line if it does not fit in one
answer: determines what is going to be the behavior when the element does not fit within the container*/ 
main {
  display: flex;
  flex-wrap: wrap;
}

aside {
  flex: 1;
  background-color: #b9c6ae;
  padding: 80px;
  text-align: center;
}


footer {
  padding: 20px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What does the justify-content property do? 
TODO: Write your answer here 
 forces distance between items to be equal
 answer: aligns the elements into the axis of the direction*/
.products {
  flex: 4;
  background-color: #fff;
  padding: 20px;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

/* 
What is the flex property a shorthand property for?
What is it doing here? 
TODO: Write your answer here 
 flex-grow flex-shrink flex-basis, first number tells it to flex so that it is bigger, second it does the same but it makes it smaller, and third it sets the inital size of the flexbox
 answer: flex-grow, flex-shrink, flex-basis / grows it by 0, shrinkes it by 0, and sets the beginning size to 400px*/
.card {
  border-style: solid;
  border-width: 1px;
  border-radius: 10px;
  padding: 10px;
  flex: 0 0 400px;
}

.card header {
  padding: 20px;
}

.card p {
  text-align: center;
}

.card img {
  width: 100%;
}

/* 
What does the flex-direction property define?
What is it doing here? 
TODO: Write your answer here 
adjusts orientation of the items based on selected type, it adjusts the elements into a single column with sizes that do not overlap 
answer: flex direction column*/ 
@media screen and (max-width: 768px) {
  main,
  nav {
    flex-direction: column;
  }
}
